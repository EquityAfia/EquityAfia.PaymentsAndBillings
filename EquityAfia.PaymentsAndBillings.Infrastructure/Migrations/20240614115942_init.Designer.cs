// <auto-generated />
using EquityAfia.PaymentsAndBillings.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EquityAfia.PaymentsAndBillings.Infrastructure.Migrations
{
    [DbContext(typeof(EquityAfiaDbContext))]
    [Migration("20240614115942_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EquityAfia.PaymentsAndBillings.Domain.Entities.Billing", b =>
                {
                    b.Property<string>("BillingId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccNo")
                        .HasColumnType("int");

                    b.Property<int>("AmountBilled")
                        .HasColumnType("int");

                    b.Property<string>("AppointmentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PayBill")
                        .HasColumnType("bit");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BillingId");

                    b.ToTable("Billings");
                });

            modelBuilder.Entity("EquityAfia.PaymentsAndBillings.Domain.Entities.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BillingId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("BillingId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("EquityAfia.PaymentsAndBillings.Domain.Entities.Service", b =>
                {
                    b.Property<string>("ServiceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AmountCharged")
                        .HasColumnType("int");

                    b.Property<string>("BillingId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ServiceId");

                    b.HasIndex("BillingId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("EquityAfia.PaymentsAndBillings.Domain.Entities.Product", b =>
                {
                    b.HasOne("EquityAfia.PaymentsAndBillings.Domain.Entities.Billing", "Billing")
                        .WithMany("Products")
                        .HasForeignKey("BillingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Billing");
                });

            modelBuilder.Entity("EquityAfia.PaymentsAndBillings.Domain.Entities.Service", b =>
                {
                    b.HasOne("EquityAfia.PaymentsAndBillings.Domain.Entities.Billing", "Billing")
                        .WithMany("Services")
                        .HasForeignKey("BillingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Billing");
                });

            modelBuilder.Entity("EquityAfia.PaymentsAndBillings.Domain.Entities.Billing", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Services");
                });
#pragma warning restore 612, 618
        }
    }
}
